{{Update|inaccurate=yes|date=December 2012}}
In [[cryptography]], '''key size''' or '''key length''' is the size measured in [[bit]]s<ref>[[Password strength#Human-generated passwords|Calculating Bit Strength]]</ref> of the [[key (cryptography)|key]] used in a cryptographic algorithm (such as a [[cipher]]). An algorithm's key length is distinct from its cryptographic security, which is a logarithmic measure of the fastest known computational attack on the algorithm, also measured in bits. The security of an algorithm cannot exceed its key length (since any algorithm can be cracked by [[brute force attack|brute force]]), but it can be smaller. For example, [[Triple DES]] has a key size of 168 bits but provides at most 112 bits of security, since an attack of complexity 2<sup>112</sup> is known. This property of Triple DES is not a weakness provided 112 bits of security is sufficient for an application. Most [[symmetric-key algorithm]]s in common use are designed to have security equal to their key length. No [[asymmetric-key algorithm]]s with this property are known; [[elliptic curve cryptography]] comes the closest with an effective security of roughly half its key length.

==Significance==
[[Key (cryptography)|Keys]] are used to control the operation of a cipher so that only the correct key can convert encrypted text ([[ciphertext]]) to [[plaintext]]. Many ciphers are based on publicly known [[algorithm]]s or are [[open source]], and so it is only the difficulty of obtaining the key that determines security of the system, provided that there is no analytic attack (i.e., a 'structural weakness' in the algorithms or protocols used), and assuming that the key is not otherwise available (such as via theft, extortion, or compromise of computer systems). The widely accepted notion that the security of the system should depend on the key alone has been explicitly formulated by [[Auguste Kerckhoffs]] (in the 1880s) and [[Claude Shannon]] (in the 1940s); the statements are known as [[Kerckhoffs' principle]] and Shannon's Maxim respectively.

A key should therefore be large enough that a brute force attack (possible against any encryption algorithm) is infeasible &ndash; i.e., would take too long to execute. [[Claude Shannon|Shannon's]] work on [[information theory]] showed that to achieve so called ''[[perfect secrecy]]'', the key length must be at least as large as the message and only used once (this algorithm is called the [[One-time pad]]). In light of this, and the practical difficulty of managing such long keys, modern cryptographic practice has discarded the notion of perfect secrecy as a requirement for encryption, and instead focuses on ''[[computational security]]'', under which the computational requirements of breaking an encrypted text must be infeasible for an attacker.

The [[preferred number]]s commonly used as key sizes (in bits) are powers of two, potentially multiplied with a small odd integer.

==Key size and encryption system==
Encryption systems are often grouped into families. Common families include symmetric systems (e.g. [[Advanced Encryption Standard|AES]]) and asymmetric systems (e.g. [[RSA (algorithm)|RSA]]); they may alternatively be grouped according to the central [[algorithm]] used (e.g. [[elliptic curve cryptography]]).

As each of these is of a different level of cryptographic complexity, it is usual to have different key sizes for the same level of security, depending upon the algorithm used. For example, the security available with a 1024-bit key using asymmetric RSA is considered approximately equal in security to an 80-bit key in a symmetric algorithm (Source: [[RSA Security]]).

The actual degree of security achieved over time varies, as more computational power and more powerful mathematical analytic methods become available. For this reason cryptologists tend to look at indicators that an algorithm or key length shows signs of potential vulnerability, to move to longer key sizes or more difficult algorithms. For example {{As of|2007|05|lc=on}}, a 1039 bit integer was factored with the [[special number field sieve]] using 400 computers over 11 months.<ref>[http://www.pcworld.com/article/id,132184-pg,1/article.html Researcher: RSA 1024-bit Encryption not Enough]</ref> The factored number was of a special form; the special number field sieve cannot be used on RSA keys. The computation is roughly equivalent to breaking a 700 bit RSA key. However, this might be an advance warning that 1024 bit RSA used in secure online commerce should be [[deprecation|deprecated]], since they may become breakable in the near future. Cryptography professor [[Arjen Lenstra]] observed that "Last time, it took nine years for us to generalize from a special to a nonspecial, hard-to-factor number" and when asked whether 1024-bit RSA keys are dead, said: "The answer to that question is an unqualified yes."<ref>[http://arstechnica.com/news.ars/post/20070523-researchers-307-digit-key-crack-endangers-1024-bit-rsa.html Researchers: 307-digit key crack endangers 1024-bit RSA<!-- Bot generated title -->]</ref>

== Brute force attack ==
{{Refimprove section|date=August 2012}}

{{Main|Brute force attack}}
Even if a symmetric cipher is currently unbreakable by exploiting structural weaknesses in its algorithm, it is possible to run through the entire space of keys in what is known as a ''brute force attack''. Since longer symmetric keys require exponentially more work to brute force search, a sufficiently long symmetric key makes this line of attack impractical.

With a key of length ''n'' bits, there are 2<sup>n</sup> possible keys. This number grows very rapidly as ''n'' increases. [[Moore's law]] suggests that computing power doubles roughly every 18 to 24 months, but even this doubling effect leaves the larger symmetric key lengths currently considered acceptable well out of reach. The large number of operations (2<sup>128</sup>) required to try all possible 128-bit keys is widely considered [[Large numbers#Computers and computational complexity|out of reach]] for conventional digital computing techniques for the foreseeable future.  However, experts anticipate alternative computing technologies that may have processing power superior to current computer technology. If a suitably sized [[quantum computer]] capable of running [[Grover's algorithm]] reliably becomes available, it would reduce a 128-bit key down to 64-bit security, roughly a DES equivalent. This is one of the reasons why AES supports a 256-bit key length.  See the discussion on the relationship between key lengths and quantum computing attacks at the bottom of this page for more information.

==Symmetric algorithm key lengths==
US Government export policy has long [[Export of cryptography in the United States|restricted the 'strength' of cryptography]] that can be sent out of the country. For many years the limit was [[40-bit encryption|40 bits]]. Today, a key length of 40 bits offers little protection against even a casual attacker with a single PC, a predictable and inevitable consequence of governmental restrictions limiting key length. In response, by the year 2000, most of the major US restrictions on the use of strong encryption were relaxed.<ref>{{cite web |url=http://www.pcworld.com/article/16028/governments_relax_encryption_regulations.html |title=Governments Relax Encryption Regulations |first=Jack |last=McCarthy |date=April 3, 2000 |publisher=[[PC World (magazine)|PC World]]}}</ref> However, not all regulations have been removed, and encryption registration with the [[U.S. Bureau of Industry and Security]] is still required to export "mass market encryption commodities, software and components with encryption exceeding 64 bits" ({{Federal Register|75|36494}}).

When the [[Data Encryption Standard]] cipher was released in 1977, a key length of [[56-bit encryption|56 bits]] was thought{{who|date=August 2012}} sufficient. There was speculation{{who|date=August 2012}} at the time, however, that the [[National Security Agency|NSA]] has deliberately reduced the key size from the original value of 112 bits (in IBM's [[Lucifer (cipher)|Lucifer cipher]]) or 64 bits (in one of the versions of what was adopted as DES) so as to limit the strength of encryption available to non-US users. The NSA has major computing resources and a large budget; some{{who|date=August 2012}} thought that 56 bits was NSA-breakable in the late '70s. However, by the late 90s, it became clear that DES could be cracked in a few days' time-frame with custom-built hardware such as could be purchased by a large corporation.<ref name="fortify">{{Cite web|url=http://www.fortify.net/related/cryptographers.html|title=Minimal key lengths for symmetric ciphers to provide adequate commercial security|first1=Matt|last1=Blaze|authorlink1=Matt Blaze|first2=Whitefield|last2=Diffie|authorlink2=Whitfield Diffie|first3=Ronald L.|last3=Rivest|authorlink3=Ron Rivest|first4=Bruce|last4=Schneier|authorlink4=Bruce Schneier|first5=Tsutomu|last5=Shimomura|authorlink5=Tsutomu Shimomura|first6=Eric|last6=Thompson|first7=Michael|last7=Wiener|month=January|year=1996|publisher=[[Fortify (Netscape)|Fortify]]|accessdate=14 October 2011}}</ref> The book ''Cracking DES'' (O'Reilly and Associates) tells of the successful attempt to break 56-bit DES by a brute force attack mounted by a cyber civil rights group with limited resources; see [[EFF DES cracker]]. 56 bits is now considered insufficient length for [[Symmetric-key algorithm|symmetric algorithm]] keys, and may have been for some time. More technically and financially capable organizations were surely able to do the same long before the effort described in the book.  [[Distributed.net]] and its volunteers broke a 64-bit RC5 key in several years, using about seventy thousand (mostly home) computers.

The [[NSA]]'s [[Skipjack (cipher)|Skipjack]] algorithm used in its [[Fortezza]] program employs 80 bit keys.

DES has been replaced in many applications by [[Triple DES]], which has 112 bits of security with 168-bit keys.

The [[Advanced Encryption Standard]] published in 2001 uses a key size of (at minimum) 128 bits. It also can use keys up to 256 bits (a specification requirement for submissions to the [[AES contest]]). Many observers currently think 128 bits is sufficient for the foreseeable future for symmetric algorithms of AES's quality{{citation needed|date=September 2013}}. The U.S. Government requires 192 or 256-bit AES keys for [[highly sensitive]] data.

In 2003, the U.S. National Institute for Standards and Technology, [[NIST]] proposed phasing out 80-bit keys by 2015. As of 2005, 80-bit keys were allowed only until 2010.

==Asymmetric algorithm key lengths==
The effectiveness of [[public key cryptography|public key cryptosystems]] depends on the intractability (computational and theoretical) of certain mathematical problems such as [[integer factorization]]. These problems are time consuming to solve, but usually faster than trying all possible keys by brute force.  Thus, asymmetric algorithm keys must be longer for equivalent resistance to attack than symmetric algorithm keys. As of 2002, an [[asymmetric key]] length of 1024 bits was generally considered{{who|date=August 2012}} the minimum necessary for the [[RSA (algorithm)|RSA]] encryption algorithm.

{{As of|2003}} [[RSA Security]] claims that 1024-bit RSA keys are equivalent in strength to 80-bit symmetric keys, 2048-bit RSA keys to 112-bit symmetric keys and 3072-bit RSA keys to 128-bit symmetric keys. RSA claims that 1024-bit keys are likely to become crackable some time between 2006 and 2010 and that 2048-bit keys are sufficient until 2030. An RSA key length of 3072 bits should be used if security is required beyond 2030.<ref>http://www.emc.com/emc-plus/rsa-labs/standards-initiatives/key-size.htm</ref> NIST key management guidelines further suggest that 15360-bit RSA keys are equivalent in strength to 256-bit symmetric keys.<ref>[http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57_part1_rev3_general.pdf Recommendation for Key Management – Part 1: General (Revised)]</ref>

The Finite Field [[Diffie-Hellman]] algorithm has roughly the same key strength as RSA for the same key sizes.  The work factor for breaking Diffie-Hellman is based on the [[discrete logarithm problem]], which is related to the integer factorization problem on which RSA's strength is based. Thus, a 3072-bit Diffie-Hellman key has about the same strength as a 3072-bit RSA key.

One of the asymmetric algorithm types, [[elliptic curve cryptography]], or ECC, appears to be secure with shorter keys than other asymmetric key algorithms require. [[NIST]] guidelines state that ECC keys should be twice the length of equivalent strength symmetric key algorithms. So, for example, a 224-bit ECC key would have roughly the same strength as a 112-bit symmetric key. These estimates assume no major breakthroughs in solving the underlying mathematical problems that ECC is based on. A message encrypted with an elliptic key algorithm using a 109-bit long key has been broken by brute force.<ref>[https://www.certicom.com/index.php/2004-press-releases/36-2004-press-releases/300-solution-required-team-of-mathematicians-2600-computers-and-17-months- Certicom Announces Elliptic Curve Cryptography Challenge Winner]</ref>

The [[NSA]] specifies that "Elliptic Curve Public Key Cryptography using the 256-bit prime modulus elliptic curve as specified in FIPS-186-2 and SHA-256 are appropriate for protecting classified information up to the SECRET level. Use of the 384-bit prime modulus elliptic curve and SHA-384 are necessary for the protection of TOP SECRET information."<ref>[http://www.nsa.gov/ia/programs/suiteb_cryptography/index.shtml NSA Suite B Cryptography (nsa.gov)]</ref>

== Effect of quantum computing attacks on key strength ==
{{Refimprove section|date=August 2012}}

The two best known quantum computing attacks are based on [[Shor's algorithm]] and [[Grover's algorithm]]. Of the two, Shor's offers the greater risk to current security systems.

Derivatives of Shor's algorithm are widely conjectured to be effective against all mainstream public-key algorithms including [[RSA (algorithm)|RSA]], [[Diffie-Hellman]] and [[elliptic curve cryptography]]. According to Professor Gilles Brassard, an expert in quantum computing: "The time needed to factor an RSA integer is the same order as the time needed to use that same integer as modulus for a single RSA encryption.   In other words, it takes no more time to break RSA on a quantum computer (up to a multiplicative constant) than to use it legitimately on a classical computer." The general consensus is that these public key algorithms are insecure at any key size if sufficiently large quantum computers capable of running Shor's algorithm become available. The implication of this attack is that all data encrypted using current standards based security systems such as the ubiquitous [[Transport Layer Security|SSL]] used to protect e-commerce and Internet banking and [[Secure Shell|SSH]] used to protect access to sensitive computing systems is at risk. Encrypted data protected using public-key algorithms can be archived and may be broken at a later time.

Mainstream symmetric ciphers (such as [[Advanced Encryption Standard|AES]] or [[Twofish]]) and collision resistant hash functions (such as [[Secure Hash Algorithm|SHA]]) are widely conjectured to offer greater security against known quantum computing attacks. They are widely thought most vulnerable to [[Grover's algorithm]]. Bennett, Bernstein, Brassard, and Vazirani proved in 1996 that a brute-force key search on a quantum computer cannot be faster than roughly 2<sup>''n''/2</sup> invocations of the underlying cryptographic algorithm, compared with roughly 2<sup>''n''</sup> in the classical case.<ref name=bennett_1997>Bennett C.H., Bernstein E., Brassard G., Vazirani U., ''[http://www.cs.berkeley.edu/~vazirani/pubs/bbbv.ps The strengths and weaknesses of quantum computation]''. [[SIAM Journal on Computing]] 26(5): 1510-1523 (1997).</ref> Thus in the presence of large quantum computers an ''n''-bit key can provide at least ''n''/2 bits of security. Quantum brute force is easily defeated by doubling the key length, which has little extra computational cost in ordinary use. This implies that at least a 160-bit symmetric key is required to achieve 80-bit security rating against a quantum computer.

==See also==
* [[Key stretching]]

== References ==
{{Reflist}}
* [http://csrc.nist.gov/publications/PubsSPs.html ''Recommendation for Key Management &mdash; Part 1: general,''] NIST Special Publication 800-57. March, 2007
* Blaze, Matt; Diffie, Whitfield; Rivest, Ronald L.; et al. "Minimal Key Lengths for Symmetric Ciphers to Provide Adequate Commercial Security". January, 1996
* Arjen K. Lenstra, Eric R. Verheul: Selecting Cryptographic Key Sizes. J. Cryptology 14(4): 255-293 (2001) &mdash; [http://citeseer.ist.psu.edu/lenstra99selecting.html Citeseer link]

==External links==
* [http://www.keylength.com/ www.keylength.com: An online keylength calculator]
* [http://synaptic-labs.com/ecosystem/context-qc-relevant-today.html A discussion on how much time we have available before we must take steps to protect against quantum computing attacks]
* NIST [http://csrc.nist.gov/CryptoToolkit/ crypto toolkit]
* [[Burt Kaliski]]: [http://www.rsasecurity.com/rsalabs/node.asp?id=2004 TWIRL and RSA key sizes] (May 2003)

{{Cryptography navbox}}

{{DEFAULTSORT:Key Size}}
[[Category:Key management]]