{{Infobox programming language
| name                   = Coral 66
| logo                   = 
| paradigm               = [[procedural programming|procedural]], [[imperative programming language|imperative]], [[structured programming|structured]]
| year                   = {{start date and age|1964}}
| designer               = [[Royal Radar Establishment]]
| developer              = 
| latest_release_version = 
| latest_release_date    = 
| latest_test_version    = 
| latest_test_date       = 
| typing                 = 
| implementations        = 
| dialects               = 
| influenced_by          = [[ALGOL]], [[JOVIAL]]
| influenced             = 
| operating_system       =
| license                =
| website                =
}}
'''CORAL''' ('''C'''omputer '''O'''n-line '''R'''eal-time '''A'''pplications '''L'''anguage) is a [[programming language]] originally developed in 1964 at the [[Royal Radar Establishment]] (RRE), [[Malvern, Worcestershire|Malvern]], [[United Kingdom|UK]], as a [[subset]] of [[JOVIAL]]. Coral 66 was subsequently developed by I. F. Currie and M. Griffiths under the auspices of '''IECCA''' ('''I'''nter-'''E'''stablishment '''C'''ommitee for
'''C'''omputer '''A'''pplications). Its official definition,<ref>{{cite book |title=Official Definition of CORAL 66 |last=Woodward |first=P.M. |authorlink = Philip Woodward |publisher=HMSO|year=1970 |pages=vii+58 |isbn=0-11-470221-7}}</ref> edited by [[Philip Woodward|Woodward]], Wetherall and Gorman, was first published in 1970.

==Overview==
Coral 66 is a general-purpose programming language based on [[ALGOL 60]], with some features from Coral 64, JOVIAL, and [[Fortran|FORTRAN]]. It includes structured record types (as in [[Pascal (programming language)|Pascal]]) and supports the packing of data into limited storage (also as in Pascal). Like [[Edinburgh IMP]] it allows embedded assembler, and also offers good run-time checking and diagnostics. It is specifically intended for [[real-time computing|real-time]] and embedded applications and for use on computers with limited processing power, including those limited to [[fixed point arithmetic]] and those without support for dynamic storage allocation.

The language was an inter-service standard for British military programming, and was also widely adopted for civil purposes in the British control and automation industry. It was used to write software for both the [[Ferranti]] and [[The General Electric Company|GEC]] computers from 1971 onwards.  Implementations also exist for the Interdata 8/32, [[PDP-11]], [[VAX]], [[DEC Alpha|Alpha]] platforms and [[HP Integrity]] servers; for the [[Honeywell]], and for the Computer Technology Limited (CTL, later ITL) [[Information_Technology_Limited#The_Modular_One|Modular-1]]; as well as for [[SPARC]] running [[Solaris (operating system)|Solaris]] and [[Intel]] running [[Linux]].

A variant of Coral 66 was developed during the late 1970s/early 1980s by the British [[General Post Office|GPO]], in conjunction with [[General Electric Company plc|GEC]], STC and [[Plessey]], for use on the [[System X (telephony)|System X]] digital telephone exchange control computers, known as PO-CORAL. This was later renamed BT-CORAL when [[British Telecom]] was spun off from the Post Office. Unique features of this language were the focus on real-time execution, message processing, limits on statement execution between waiting for input, and a prohibition on recursion to remove the need for a stack.

As Coral was aimed at a variety of real-time work, rather than general office DP, there was no standardised equivalent to a [[stdio]] library. IECCA recommended a primitive I/O package to accompany any compiler (in a document titled ''Input/Output of Character data in Coral 66 Utility Programs''). Most implementers avoided this by producing Coral interfaces to existing Fortran and, later, C libraries.

Perhaps CORAL's most significant contribution to computing was the enforcement of quality control in commercial compilers. To have a CORAL compiler approved by IECCA, and thus allowing a compiler to be marketed as a CORAL 66 compiler, the candidate compiler had to compile and execute an official suite of 25 test programs and 6 benchmark programs. The process was part of the BS5905 approval process. This methodology was observed and adapted later by DoD for the official certification of Ada compilers.

Source code for a Coral 66 compiler (written in [[BCPL]]) has been recovered and the "Official Definition of Coral 66" document by [[Office of Public Sector Information|HMSO]] has been scanned; the Ministry of Defence patent office has issued a licence to the Edinburgh Computer History project to allow them to put both the code and the language reference online for non-commercial use.

==References==
{{reflist}}

==External links==
* [http://history.dcs.ed.ac.uk/archive/os/deimos/ercm09/emas-2900/coral2.txt CORAL 66 test program] extracted from the [http://history.dcs.ed.ac.uk/archive/os/emas/users/ercm09/emas-2900/coral.txt Test Responder report]
* [http://web.archive.org/web/20041102162930/http://yfroom.8800.org/apps/1750/benchmarks/coral66/ CORAL 66 benchmarks]
* [http://www.swep-eds.com/CORAL/CORAL%20Page.htm EDS CORAL 66 compiler for Vax/VMS] (commercial working CORAL 66 system)
* [http://www.xgc.com/products/coral66.htm XGC Software's Coral 66 compiler] (commercial system)
* [http://www.xgc.com/manuals/xgc-c66-rm/book1.html XGC Coral 66 Language Reference Manual (HTML)] and [http://www.xgc.com/manuals/pdf/xgc-c66-rm.pdf in PDF format], based on the Official Definition.
* [http://standards.mackido.com/bs/bs-standards24_view_4284.html BS5905] CORAL 66 Standard
* [http://www.dstan.mod.uk/data/05/047/00000200.pdf DEF STAN 05-47]
* [http://www.ibiblio.org/pub/academic/computer-science/history/pdp-11/rsx/decus/rsx82b/312022/ PDP-11 CORAL/ASM interfacing library]
* ECCE [http://history.dcs.ed.ac.uk/archive/os/emas/users/ercm09/emas-2900/coraltrans.txt editor script to translate CORAL 66] into [[Edinburgh IMP]]

[[Category:Procedural programming languages]]
[[Category:Programming languages created in 1964]]