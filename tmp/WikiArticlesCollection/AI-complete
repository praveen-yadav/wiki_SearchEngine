In the field of [[artificial intelligence]], the most difficult problems are informally known as '''AI-complete''' or '''AI-hard''', implying that the difficulty of these computational problems is equivalent to that of solving the central artificial intelligence problem—making computers as intelligent as people, or [[strong AI]].<ref name="Shapiro92">Shapiro, Stuart C. (1992). [http://www.cse.buffalo.edu/~shapiro/Papers/ai.pdf Artificial Intelligence] In Stuart C. Shapiro (Ed.), ''Encyclopedia of Artificial Intelligence'' (Second Edition, pp.&nbsp;54–57). New York: John Wiley. (Section 4 is on "AI-Complete Tasks".)</ref>  To call a problem AI-complete reflects an attitude that it would not be solved by a simple specific algorithm.  

AI-complete problems are hypothesised to include [[computer vision]], [[natural language understanding]], and dealing with unexpected circumstances while solving any real world problem.<ref>Roman V. Yampolskiy. Turing Test as a Defining Feature of AI-Completeness . In Artificial Intelligence, Evolutionary Computation and Metaheuristics (AIECM) --In the footsteps of Alan Turing. Xin-She Yang (Ed.). pp. 3-17. (Chapter 1). Springer, London. 2013. http://cecs.louisville.edu/ry/TuringTestasaDefiningFeature04270003.pdf</ref>

With current technology, AI-complete problems cannot be solved by computer alone, but also require [[human computation]].  This property can be useful, for instance to test for the presence of humans as with [[CAPTCHA]]s, and for [[computer security]] to circumvent [[brute-force attack]]s.<ref>Luis von Ahn, Manuel Blum, Nicholas Hopper, and John Langford. [http://www.captcha.net/captcha_crypt.pdf CAPTCHA: Using Hard AI Problems for Security]. In Proceedings of Eurocrypt, Vol. 2656 (2003), pp. 294-311.</ref><ref>{{cite paper | first = Richard | last = Bergmair | title = Natural Language Steganography and an "AI-complete" Security Primitive | id = {{citeseerx|10.1.1.105.129}} | date = January 7, 2006 }} (unpublished?)</ref>

==History==
The term was coined by [[Fanya Montalvo]]<ref> John C. Mallery. "Thinking About Foreign Policy: Finding an Appropriate Role for Artificially Intelligent Computers"  Master's thesis, M.I.T. Political Science Department. 1988</ref> by analogy with [[NP-complete]] and [[NP-hard]] in [[Computational complexity theory|complexity theory]], which formally describes the most famous class of difficult problems.<ref>{{Citation| last=Mallery | first=John C.  |year=1988 | url=http://citeseer.ist.psu.edu/mallery88thinking.html | contribution=Thinking About Foreign Policy: Finding an Appropriate Role for Artificially Intelligent Computers | title=The 1988 Annual Meeting of the International Studies Association. | location=St. Louis, MO }}.</ref> Early uses of the term are in Erik Mueller's 1987 Ph.D. dissertation<ref>Mueller, Erik T. (1987, March). [ftp://ftp.cs.ucla.edu/tech-report/198_-reports/870017.pdf ''Daydreaming and Computation'' (Technical Report CSD-870017)] Ph.D. dissertation, University of California, Los Angeles. ("Daydreaming is but one more ''AI-complete'' problem: if we could solve any one artificial intelligence problem, we could solve all the others", p.&nbsp;302)</ref> and in [[Eric S. Raymond|Eric Raymond]]'s 1991 [[Jargon File]].<ref>Raymond, Eric S. (1991, March 22). [http://catb.org/esr/jargon/oldversions/jarg282.txt Jargon File Version 2.8.1] (Definition of "AI-complete" first added to jargon file.)</ref>

==AI-complete problems==
AI-complete problems are hypothesised to include:
*[[Computer vision]] (and subproblems such as [[object recognition]])
*[[Natural language understanding]] (and subproblems such as [[text mining]], [[machine translation]], and [[word sense disambiguation]])
*Dealing with unexpected circumstances while solving any real world problem, whether it's [[robotic mapping|navigation]] or [[automated planning and scheduling|planning]] or even the kind of [[reasoning]] done by [[expert system]]s.

===Machine translation===
{{main|Machine translation}}

To translate accurately, a machine must be able to understand the text. It must be able to follow the author's argument, so it must have some ability to [[artificial intelligence#Deduction, reasoning, problem solving|reason]]. It must have extensive [[commonsense knowledge|world knowledge]] so that it knows what is being discussed — it must at least be familiar with all the same commonsense facts that the average human translator knows. Some of this knowledge is in the form of facts that can be explicitly represented, but some knowledge is unconscious and closely tied to the human body: for example, the machine may need to understand how an ocean makes one ''feel'' to accurately translate a specific metaphor in the text. It must also model the authors' goals, intentions, and emotional states to accurately reproduce them in a new language. In short, the machine is required to have wide variety of human intellectual skills, including [[artificial intelligence#Deduction, reasoning, problem solving|reason]], [[commonsense knowledge]] and the intuitions that underlie [[robotics|motion and manipulation]], [[machine perception|perception]], and [[artificial intelligence#Social intelligence|social intelligence]]. [[Machine translation]], therefore, is believed to be AI-complete: it may require [[strong AI]] to be done as well as humans can do it.

==Software brittleness==
{{main|Software brittleness}}
Current AI systems can solve very simple restricted versions of AI-complete problems, but never in their full generality. When AI researchers attempt to "scale up" their systems to handle more complicated, real world situations, the programs tend to become excessively [[brittle (software)|brittle]] without [[commonsense knowledge]] or a rudimentary understanding of the situation: they fail as unexpected circumstances outside of its original problem context begin to appear.  When human beings are dealing with new situations in the world, they are helped immensely by the fact that they know what to expect: they know what all things around them are, why they are there, what they are likely to do and so on. They can recognize unusual situations and adjust accordingly. A machine without [[strong AI]] has no other skills to fall back on.<ref>{{Citation | last=Lenat | first=Douglas |  last2=Guha | first2=R. V.| year = 1989 | title = Building Large Knowledge-Based Systems | publisher = Addison-Wesley| author-link=Douglas Lenat|pages=1–5}}</ref>

==Formalization==
[[Computational complexity theory]] deals with the relative computational difficulty of [[computable function]]s.  By definition it does not cover problems whose solution is unknown or has not been characterised formally.  Since many AI problems have no formalisation yet, conventional complexity theory does not allow the definition of AI-completeness.

To address this problem, a complexity theory for AI has been proposed.<ref name="ucl.ac.uk">Dafna Shahaf and Eyal Amir (2007) [http://www.cs.uiuc.edu/~eyal/papers/ai-complete-commonsense07.pdf Towards a theory of AI completeness]. [http://www.ucl.ac.uk/commonsense07 Commonsense 2007,  8th International Symposium on Logical Formalizations of Commonsense Reasoning].</ref> It is based on a [[model of computation]] that splits the computational burden between a computer and a human: one part is solved by computer and the other part solved by human.  This is formalised by a '''human-assisted [[Turing machine]]'''.  The formalisation defines algorithm complexity, problem complexity and reducibility which in turn allows [[equivalence class]]es to be defined.

The complexity of executing an algorithm with a human-assisted Turing machine is given by a pair <math>\langle\Phi_{H},\Phi_{M}\rangle</math>, where the first element represents the complexity of the human's part and the second element is the complexity of the machine's part.

===Results===
The complexity of solving the following problems with a human-assisted Turing machine is:<ref name="ucl.ac.uk"/>

* [[Optical character recognition]] for printed text: <math>\langle O(1), poly(n) \rangle </math>
* [[Turing test]]:
** for an <math>n</math>-sentence conversation where the oracle remembers the conversation history (persistent oracle): <math>\langle O(n), O(n) \rangle </math>
** for an <math>n</math>-sentence conversation where the conversation history must be retransmitted: <math>\langle O(n), O(n^2) \rangle </math>
** for an <math>n</math>-sentence conversation where the conversation history must be retransmitted and the person takes linear time to read the query: <math>\langle O(n^2), O(n^2) \rangle </math>
* [[ESP game]]: <math>\langle O(n), O(n) \rangle </math>
* Image labelling (based on the [[Arthur–Merlin protocol]]): <math>\langle O(n), O(n) \rangle </math>
* [[Object categorization from image search|Image classification]]: human only: <math>\langle O(n), O(n) \rangle </math>, and with less reliance on the human: <math>\langle O(\log n), O(n \log n) \rangle </math>.

==See also==
*[[ASR-complete]]
*[[List of open problems in computer science]]
*[[Synthetic intelligence]]

==References==
<references/>

{{DEFAULTSORT:Ai-Complete}}
[[Category:Artificial intelligence]]
[[Category:Computational problems]]